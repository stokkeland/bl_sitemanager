#!/bin/bash
# bl_site_config_delete_backups - Delete config backup files for sites

source "$(dirname "$0")/bl_common.sh"

usage() {
    echo "Usage: $0 [site_name|--all] [--dry-run]"
    echo "  site_name - Clean backups for specific site"
    echo "  --all     - Clean backups for all active sites"
    echo "  --dry-run - Show what would be deleted without actually deleting"
    exit 1
}

delete_config_backups() {
    local site_name="$1"
    local fs_base="$2"
    local dry_run="$3"
    
    local config_dir="$(dirname "$fs_base$BL_CONFIG_FILE_PATH")"
    local config_filename="$(basename "$BL_CONFIG_FILE_PATH")"
    
    info_msg "=== Cleaning config backups for: $site_name ==="
    
    if [[ ! -d "$config_dir" ]]; then
        warning_msg "Config directory does not exist: $config_dir"
        return 1
    fi
    
    # Find backup files
    local backup_files=("$config_dir"/"$config_filename".backup.*)
    local backup_count=0
    local deleted_count=0
    
    # Check if any backup files exist
    for backup_file in "${backup_files[@]}"; do
        if [[ -f "$backup_file" ]]; then
            ((backup_count++))
            
            if [[ "$dry_run" == "true" ]]; then
                echo "  Would delete: $backup_file"
            else
                if rm "$backup_file" 2>/dev/null; then
                    echo "  Deleted: $backup_file"
                    ((deleted_count++))
                else
                    error_msg "  Failed to delete: $backup_file"
                fi
            fi
        fi
    done
    
    if [[ $backup_count -eq 0 ]]; then
        info_msg "  No backup files found for $site_name"
    else
        if [[ "$dry_run" == "true" ]]; then
            info_msg "  Found $backup_count backup files for $site_name (dry-run mode)"
        else
            success_msg "  Deleted $deleted_count of $backup_count backup files for $site_name"
        fi
    fi
    
    echo
}

main() {
    check_user
    init_data_file
    
    if [[ $# -lt 1 ]]; then
        usage
    fi
    
    local target="$1"
    local dry_run="false"
    
    # Check for dry-run flag
    if [[ "$2" == "--dry-run" ]] || [[ "$1" == "--dry-run" ]]; then
        dry_run="true"
        if [[ "$1" == "--dry-run" ]]; then
            target="$2"
        fi
    fi
    
    if [[ "$dry_run" == "true" ]]; then
        warning_msg "DRY-RUN MODE: No files will be deleted"
        echo
    fi
    
    if [[ "$target" == "--all" ]]; then
        # Process all active sites
        local total_sites=0
        while IFS='|' read -r name type status fs_base url_base notes created updated inactivated; do
            if [[ -n "$name" ]]; then
                ((total_sites++))
                delete_config_backups "$name" "$fs_base" "$dry_run"
            fi
        done < <(get_active_sites)
        
        if [[ $total_sites -eq 0 ]]; then
            warning_msg "No active sites found"
        fi
    else
        # Process specific site
        local site_name="$target"
        if ! site_exists "$site_name"; then
            error_msg "Site '$site_name' does not exist"
            exit 1
        fi
        
        local fs_base=$(get_site_fs_base "$site_name")
        delete_config_backups "$site_name" "$fs_base" "$dry_run"
    fi
    
    if [[ "$dry_run" == "true" ]]; then
        echo
        info_msg "Dry-run complete. Run without --dry-run to actually delete files."
    fi
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi

